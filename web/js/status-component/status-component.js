define(['knockout'], 
    function(ko) {
        function model(context) {
                var self = this; 
                
                /* 
                 * This component expects to find the login token stored in localStorage, under the "token" key.
                 * 
                 * For this component to be able to immediately react when the user logs in, the login component should
                 * generate a tokenGenerated event after it puts the login token into localStorage.
                 * 
                 * To do this, the login code should contain some code like:
                 * <code to log in and store token goes here>
                 * 
                 * var event = new Event("tokenGenerated");
                 * document.dispatchEvent(event);
                 */
                
                //TODO: add error handling for timeout
                //      "network error" maybe?
                
                self.checkTime = 60 * 1000; //check every 60s
                
                self.connectedMessage = "Status: connected";
                self.disconnectedMessage = "Status: disconnected";
                self.checkingMessage = "Status: checking...";
                
                self.status = ko.observable(self.disconnectedMessage);
                
                
                //respond to event generated by login component
                document.addEventListener("tokenGenerated", function() {
                    self.testStoredToken();
                });

                self.testToken = function(token) {
                    var reqData = { 
                        "deviceName":"aisTester",
                        "targetName":"F0101",
                        "targetType":"table",
                        "outputType":"GRID_DATA",
                        "dataServiceType":"BROWSE", 
                        "maxPageSize":"100",
                        "query": {
                            "autoFind":true,
                            "condition": []
                            }
                        };
                        
                        reqData.token = token;


                        $.ajax({
                            url:"http://demo.steltix.com/jderest/dataservice",
                            type:"post",
                            contentType:"application/json",
                            timeout: "10000",
                            data:JSON.stringify(reqData),
                            error: function(xhr, textStatus, errorThrown) {
                                console.log(xhr);
                                console.log(textStatus);
                                console.log(errorThrown);
                                self.status(self.disconnectedMessage);
                            }
                        }).done(function (data) {
                            console.log(JSON.stringify(data))
                            self.status(self.connectedMessage);
                        }); 
                }
                 
                self.getColor = function() {
                    if (self.status() == self.connectedMessage) {
                        return 'color: #2cdb64'; //green
                    } else {
                        return 'color: #ff3333'; //red
                    }
                }
                
                self.connectedSymbol = function() {
                    if (self.status() == self.connectedMessage) {
                        return '✓';
                    } else if (self.status() == self.disconnectedMessage){
                       return '✘';
                    } else {
                        return '';
                    }
                }
                
                //used for debugging, ignore
                self.getToken = function() {
                    console.log("getting token");
                    self.exampleObservable = ko.observable("status-component");
                    var req = {};

                    req.deviceName='aisTester';
                    req.username="demo";
                    req.password="demo";

                    // authenticate with the system by getting a token
                    $.ajax({
                        url:"http://demo.steltix.com/jderest/tokenrequest",
                        type:'post',
                        data:JSON.stringify(req),
                        contentType:'application/json', 
                        fail:function (xhr, textStatus, errorThrown) {
                            console.log(errorThrown, textStatus, xhr)
                        }

                    }).done(function (data, textStatus, xhr) {
                        console.log(xhr.responseJSON.userInfo.token);
                    });
                };
                self.getToken();
                //end
                
                self.testStoredToken = function() {
                    var token = localStorage.getItem("token");
                    self.status(self.checkingMessage);
                    self.testToken(token);
                }
                
                setInterval(self.testStoredToken, self.checkTime)
        }
    return model;
});
